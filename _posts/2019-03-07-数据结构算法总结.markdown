---
layout:     post
title:      "数据结构和算法需要学会的"
subtitle:   ""
date:       2019-03-07
author:     "Aaron"
header-img: "img/post-bg-js-version.jpg"
tags:
    - 算法总结
    - 基础
    - 面试
---

> Fignting!!!

## 复杂度分析
* 最好情况时间复杂度
* 最坏情况时间复杂度
* 平均情况时间复杂度
* 均摊时间复杂度

## 10 个数据结构：
### 数组
* 实现一个支持动态扩容的数组
* 实现一个大小固定的有序数组，支持动态增删改操作
* 实现两个有序数组合并为一个有序数组

#### leetcode

Three Sum（求三数之和)
> https://leetcode-cn.com/problems/3sum/
Majority Element（求众数） 
> https://leetcode-cn.com/problems/majority-element/
Missing Positive（求缺失的第一个正数）
> https://leetcode-cn.com/problems/first-missing-positive/

### 链表
* 实现单链表、循环链表、双向链表，支持增删操作
* 实现单链表反转
* 实现两个有序的链表合并为一个有序链表
* 实现求链表的中间结点

#### leetcode
Linked List Cycle I（环形链表）
https://leetcode-cn.com/problems/linked-list-cycle/
Merge k Sorted Lists（合并 k 个排序链...
https://leetcode-cn.com/problems/merge-k-sorted-lists/

### 栈
* 用数组实现一个顺序栈
* 用链表实现一个链式栈
* 编程模拟实现一个浏览器的前进、后退功能

#### leetcode
Valid Parentheses（有效的括号）
https://leetcode-cn.com/problems/valid-parentheses/
Longest Valid Parentheses（最长有效括号）
https://leetcode-cn.com/problems/longest-valid-parentheses/
Evaluate Reverse Polish Notatio（逆波兰表达式求值）
https://leetcode-cn.com/problems/evaluate-reverse-polish-notation/

### 队列
* 用数组实现一个顺序队列
* 用链表实现一个链式队列
* 实现一个循环队列

#### leetcode
Design Circular Deque（设计一个双端队列）
https://leetcode-cn.com/problems/design-circular-deque/
Sliding Window Maximum（滑动窗口最大值）
https://leetcode-cn.com/problems/sliding-window-maximum/

### 递归
* 编程实现斐波那契数列求值 f(n)=f(n-1)+f(n-2）
* 编程实现求阶乘 n!
* 编程实现一组数据集合的全排列

#### leetcode
Climbing Stairs（爬楼梯）
https://leetcode-cn.com/problems/climbing-stairs/

### 排序
* 实现归并排序、快速排序、插入排序、冒泡排序、选择排序
* 编程实现 O(n) 时间复杂度内找到一组数据的第 K 大元素

### 二分查找
* 实现一个有序数组的二分查找算法
* 实现模糊二分查找算法（比如大于等于给定值的第一个元素）

#### leetcode
https://leetcode-cn.com/problems/sqrtx/

### 散列表
* 实现一个基于链表法解决冲突问题的散列表
* 实现一个 LRU 缓存淘汰算法

### 字符串
* 实现一个字符集，只包含 a～z 这 26 个英文字母的 Trie 树
* 实现朴素的字符串匹配算法

#### leetcode
Reverse String （反转字符串）
https://leetcode-cn.com/problems/reverse-string/
Reverse Words in a String（翻转字符串里的单词）
https://leetcode-cn.com/problems/reverse-words-in-a-string/
String to Integer (atoi)（字符串转换整数）
https://leetcode-cn.com/problems/string-to-integer-atoi/

### 二叉树
* 实现一个二叉查找树，并且支持插入、删除、查找操作
* 实现查找二叉查找树中某个节点的后继、前驱节点
* 实现二叉树前、中、后序以及按层遍历

#### leetcode
Invert Binary Tree（翻转二叉树）
https://leetcode-cn.com/problems/invert-binary-tree/
Maximum Depth of Binary Tree（二叉树的最大深度）
https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/
Validate Binary Search Tree（验证二叉查找树）
https://leetcode-cn.com/problems/validate-binary-search-tree/
Path Sum（路径总和）
https://leetcode-cn.com/problems/path-sum/

### 堆
* 实现一个小顶堆、大顶堆、优先级队列
* 实现堆排序
* 利用优先级队列合并 K 个有序数组
* 求一组动态数据集合的最大 Top K

#### leetcode

### 跳表

### 图
* 实现有向图、无向图、有权图、无权图的邻接矩阵和邻接表表示方法
* 实现图的深度优先搜索、广度优先搜索
* 实现 Dijkstra 算法、A* 算法
* 实现拓扑排序的 Kahn 算法、DFS 算法

#### leetcode
Number of Islands（岛屿的个数）
https://leetcode-cn.com/problems/number-of-islands/description/
Valid Sudoku（有效的数独）
https://leetcode-cn.com/problems/valid-sudoku/


### Trie 树



 